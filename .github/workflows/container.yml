name: NodeJS CI
on: ["push"]
jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD}}
      DATABASE_NAME: ${{ secrets.TESTING_DATABASE_NAME}}
      DIALECT: ${{ secrets.DIALECT}}
      HOST: ${{ secrets.HOST}}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - run: npm run build --if-present
      - name: Run Tests
        # run: npm run coverage
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD}}
          DATABASE_NAME: ${{ secrets.TESTING_DATABASE_NAME}}
          DIALECT: ${{ secrets.DIALECT}}
          HOST: ${{ secrets.HOST}}

      - name: Coveralls
        uses: coverallsapp/github-action@master
        env:
          CI: true
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
