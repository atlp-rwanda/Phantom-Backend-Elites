name: NodeJS CI
on: ["push"]
jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    
     # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/phantom 
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm run build --if-present
    - run: npm run test

    # - name: Connect to PostgreSQL
    #     # Runs a script that creates a PostgreSQL table, populates
    #     # the table with data, and then retrieves the data.
    #   run: node client.js
    #     # Environment variables used by the `client.js` script to create a new PostgreSQL table.
    #   env:
    #       # The hostname used to communicate with the PostgreSQL service container
    #       POSTGRES_HOST: postgres
    #       # The default PostgreSQL port
    #       POSTGRES_PORT: 5432


    - name: Coveralls
      uses: coverallsapp/github-action@master
      env:
        CI: true
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}